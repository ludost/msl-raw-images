<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.msl-raw-images</groupId>
	<artifactId>MSLAgents</artifactId>
	<name>MSL-raw-images website</name>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<url>http://msl-raw-images.com</url>

	<developers>
		<developer>
			<name>Ludo Stellingwerff</name>
			<id>ludo</id>
			<email>ludo.stellingwerff@gmail.com</email>
			<timezone>1</timezone>
		</developer>
	</developers>

	<properties>
		<skipTests>true</skipTests>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.scm.version>1.8.1</maven.scm.version>
		<wagon-scm.version>2.2</wagon-scm.version>
		<maven-eclipse-plugin.version>2.9</maven-eclipse-plugin.version>
		<maven-compiler-plugin.version>2.3.2</maven-compiler-plugin.version>
		<maven-resources-plugin.version>2.5</maven-resources-plugin.version>
		<maven-surefire-plugin.version>2.12</maven-surefire-plugin.version>
		<maven-source-plugin.version>2.1.2</maven-source-plugin.version>
		<junit.version>4.11</junit.version>

		<project.warfile.name>MSLAgents.war</project.warfile.name>
		<jackson.version>2.0.0</jackson.version>
		<javax.servlet-api.version>3.0.1</javax.servlet-api.version>
		<eve.version>1.2.0-SNAPSHOT</eve.version>
		<exec-maven-plugin.version>1.2.1</exec-maven-plugin.version>
		<jetty.version>8.1.9.v20130131</jetty.version>
		<joda-time.version>2.1</joda-time.version>
		<twitter4j.version>[3.0,)</twitter4j.version>
		<httpcore.version>4.2.3</httpcore.version>
		<tagsoup.version>1.2</tagsoup.version>
		<cors-filter.version>1.3.2</cors-filter.version>
		<guava.version>r09</guava.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
			<version>${httpcore.version}</version>
		</dependency>

		<dependency>
			<groupId>org.ccil.cowan.tagsoup</groupId>
			<artifactId>tagsoup</artifactId>
			<version>${tagsoup.version}</version>
		</dependency>

		<dependency>
			<groupId>org.twitter4j</groupId>
			<artifactId>twitter4j-core</artifactId>
			<version>${twitter4j.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<dependency>
			<groupId>com.almende.eve</groupId>
			<artifactId>eve-core</artifactId>
			<version>${eve.version}</version>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>${joda-time.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${javax.servlet-api.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.thetransactioncompany</groupId>
			<artifactId>cors-filter</artifactId>
			<version>${cors-filter.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty-maven-plugin</artifactId>
			<version>${jetty.version}</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>

		<plugins>
			<!-- Make compiler UTF-8/ISO-8859-1 aware, set JVM to 1.6+ -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<encoding>UTF-8</encoding>
					<compilerArguments>
						<verbose />
					</compilerArguments>
				</configuration>
			</plugin>

			<!-- Have Eclipse IDE's Maven integration (specified in <pluginManagement/>) 
				download sources and javadoc -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>

			<!-- skip all tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<skipTests>${skipTests}</skipTests>
					<parallel>methods</parallel>
					<threadCount>10</threadCount>
				</configuration>
			</plugin>

			<!-- Attach sources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven-source-plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${exec-maven-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<includeProjectDependencies>false</includeProjectDependencies>
					<includePluginDependencies>true</includePluginDependencies>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!-- Configure the Maven2 Eclipse IDE Integration (m2e) for non-standard 
					plug-in executions during the compile-test-run life-cycles by the IDE -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<!-- or install the buildhelper in Eclipse :: Window :: Preferences 
									:: Maven :: Discovery :: Open Catalog -->
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>${maven-eclipse-plugin.version}</version>
				</plugin>

				<!-- setup jetty plugin -->
				<plugin>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>${jetty.version}</version>
					<configuration>
						<scanIntervalSeconds>10</scanIntervalSeconds>
						<reload>manual</reload>
						<scanTargets>
							<scanTarget>src/main/webapp</scanTarget>
						</scanTargets>
						<webAppSourceDirectory>${basedir}/src/main/webapp</webAppSourceDirectory>
						<webApp>
							<contextPath>/MSLAgents</contextPath>
							<descriptor>src/main/webapp/WEB-INF/web.xml</descriptor>
						</webApp>
						<systemProperties>
							<systemProperty>
								<name>com.almende.eve.runtime.environment</name>
								<value>Development</value>
							</systemProperty>
						</systemProperties>
						<stopKey>myAgents</stopKey>
						<stopPort>9999</stopPort>
					</configuration>

					<executions>
						<execution>
							<id>start-jetty</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<scanIntervalSeconds>0</scanIntervalSeconds>
								<daemon>true</daemon>
							</configuration>
						</execution>
						<execution>
							<id>stop-jetty</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>stop</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
